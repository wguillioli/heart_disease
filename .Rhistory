dat <- "C:\\R\\heart\\heart.dat"
readLines(dat, n=10)
read.table(dat, header=TRUE)
read.table(dat)
d <- read.table(dat)
View(d)
dim(d)
?read.table
d <- read.table(dat, col.names = index)
columns <- c(age, sex, chest_pain_type,
resting_bp,cholestoral, fasting_blood_sugar,
resting_electro, max_heart_rate, exercise_angina,
oldpeak, slope, number_vessels,
thal: 3)
columns <- c(age, sex, chest_pain_type,
resting_bp,cholestoral, fasting_blood_sugar,
resting_electro, max_heart_rate, exercise_angina,
oldpeak, slope, number_vessels,
thal)
colnames(d) <- columns
columns <- c("age", sex, chest_pain_type,
resting_bp,cholestoral, fasting_blood_sugar,
resting_electro, max_heart_rate, exercise_angina,
oldpeak, slope, number_vessels,
thal)
columns <- c("age", "sex", "chest_pain_type",
"resting_bp", "cholestoral", "fasting_blood_sugar",
"resting_electro", "max_heart_rate", "exercise_angina",
"oldpeak", "slope", "number_vessels",
"thal")
colnames(d) <- columns
glimpse(d)
require(tidyverse)
glimpse(d)
columns <- c("age", "sex", "chest_pain_type",
"resting_bp", "cholestoral", "fasting_blood_sugar",
"resting_electro", "max_heart_rate", "exercise_angina",
"oldpeak", "slope", "number_vessels",
"thal", "disease")
colnames(d) <- columns
glimpse(d)
require(tidyverse)
require(rpart) #for rpart tree
require(rpart.plot) #for tree plot
require(randomForest)
rm(list = ls())
probs <- c(0, 0.01, 0.05, 0.10, 0.25, 0.50, 0.75, 0.90, 0.95,
0.99, 1)
dat <- "C:\\R\\heart\\heart.dat"
rm(list = ls())
require(tidyverse)
require(rpart) #for rpart tree
require(rpart.plot) #for tree plot
require(randomForest)
require(caret)
require(caret)
install.packages("recipes")
require(caret)
require(recipes)
install.packages("recipes")
rm(list = ls())
require(tidyverse)
require(rpart) #for rpart tree
require(rpart.plot) #for tree plot
require(randomForest)
require(caret)
require(utils)
install.packages("tidyverse")
install.packages("caret")
require(tidyverse)
require(caret)
(wd <- setwd("C:\\GitHub\\heart_disease\\"))
get_percentiles <- function(column){
print(quantile(column,
prob = c(0, 0.01, 0.05, 0.10, 0.25, 0.50, 0.75, 0.90, 0.95,
0.99, 1)))
}
#print(quantile(d$age,
#               prob = c(0, 0.01, 0.05, 0.10, 0.25, 0.50, 0.75, 0.90, 0.95,
#                        0.99, 1)))
dat_file_path <- paste0(wd, "/data/heart.dat")
readLines(dat_file_path, n=10)
(wd <- setwd("C:\\GitHub\\heart_disease\\"))
get_percentiles <- function(column){
print(quantile(column,
prob = c(0, 0.01, 0.05, 0.10, 0.25, 0.50, 0.75, 0.90, 0.95,
0.99, 1)))
}
#print(quantile(d$age,
#               prob = c(0, 0.01, 0.05, 0.10, 0.25, 0.50, 0.75, 0.90, 0.95,
#                        0.99, 1)))
dat_file_path <- paste0(wd, "/data/heart.dat")
readLines(dat_file_path, n=10)
d <- read.table(dat_file_path)
dim(d) #270 x 14 as expected
column_names <- c("age",
"sex",
"chest_pain",
"rest_bp",
"serum_chol",
"fasting_blood_sugar",
"electrocardiographic",
"max_heart_rate",
"angina",
"oldpeak",
"slope",
"major_vessels",
"thal",
"heart_disease"
)
colnames(d) <- column_names
glimpse(d)
summary(d)
round(cor(d),1)
round(cor(d[,14], d[,1:13]),1)
#---------------------------------------------------------------------------
#univ eda, distrib, trim, junTAR, impute,
#$ age                  <dbl> 70, 67, 57, 64, 74, 65, 56, 59, 60, 63, 59, 53, 44, 61, 57, 71, 46, 53, 64, 40, 67, 48, 43, 47, 54, 48, 46, 51, 58, 71, 57…
get_percentiles(d$age) #from 29 to 77
ggplot(d, aes(x=age)) +
geom_histogram(binwidth = 5) #somewhat normal
#$ sex                  <dbl> 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,…
#0: female, 1: male
d$sex_fct <- as.factor(recode(d$sex, '0' = "F", '1' = "M"))
d <- d %>%
mutate(sex_fct = as.factor(recode(d$sex, '0' = "F", '1' = "M"))) %>%
select(-sex)
d %>%
group_by(sex_fct) %>%
tally() %>%
mutate(p=n/sum(n)) #68%M, 32%F
#$ chest_pain           <dbl> 4, 3, 2, 4, 2, 4, 3, 4, 4, 4, 4, 4, 3, 1, 4, 4, 4, 4, 1, 1, 4, 2, 4, 4, 2, 3, 4, 3, 3, 3, 3, 4, 3, 4, 4, 4, 4, 1, 3, 4, 4,…
d %>%
group_by(chest_pain) %>%
tally() %>%
mutate(p=n/sum(n)) #from 1-4 assuming 4 is worse?
d <- d %>%
mutate(chest_pain_fct = as.factor(chest_pain)) %>%
select(-chest_pain)
#$ rest_bp              <dbl> 130, 115, 124, 128, 120, 120, 130, 110, 140, 150, 135, 142, 140, 134, 128, 112, 140, 140, 110, 140, 120, 130, 115, 112, 13…
get_percentiles(d$rest_bp) #from 94 to 200
ggplot(d, aes(x=rest_bp)) +
geom_histogram(binwidth = 10) #normal-ish, could be trimmed but won't
#$ serum_chol           <dbl> 322, 564, 261, 263, 269, 177, 256, 239, 293, 407, 234, 226, 235, 234, 303, 149, 311, 203, 211, 199, 229, 245, 303, 204, 28…
get_percentiles(d$serum_chol) #from 126 to 564
ggplot(d, aes(x=serum_chol)) +
geom_histogram(binwidth = 25) #needs to be trimmed to make normal dist
d$serum_chol_trim <- ifelse(d$serum_chol >= quantile(d$serum_chol, prob = 0.99),
quantile(d$serum_chol, prob = 0.99),
d$serum_chol)
ggplot(d, aes(x=serum_chol_trim)) +
geom_histogram(binwidth = 10)
d <- d %>%
select(-serum_chol)
#$ fasting_blood_sugar  <dbl> 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,…
#(type: binary): fasting blood sugar > 120 mg/dl
d$fasting_blood_sugar_high <- as.factor(recode(d$fasting_blood_sugar, '0' = "N", '1' = "Y"))
d %>%
group_by(fasting_blood_sugar_high) %>%
tally() %>%
mutate(p=n/sum(n)) #only 15% have it high
d <- d %>%
select(-fasting_blood_sugar)
#$ electrocardiographic <dbl> 2, 2, 0, 0, 2, 0, 2, 2, 2, 2, 0, 2, 2, 0, 2, 0, 0, 2, 2, 0, 2, 2, 0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 0, 2, 0,…
#(values 0,1,2)
d %>%
group_by(electrocardiographic) %>%
tally() %>%
mutate(p=n/sum(n)) #mostly 0 and 2, will recode 1 later
d <- d %>%
mutate(electrocardiographic_fct = as.factor(electrocardiographic)) %>%
select(-electrocardiographic)
#$ max_heart_rate       <dbl> 109, 160, 141, 105, 121, 140, 142, 142, 170, 154, 161, 111, 180, 145, 159, 125, 120, 155, 144, 178, 129, 180, 181, 143, 15…
get_percentiles(d$max_heart_rate) #from 71 to 202
ggplot(d, aes(x=max_heart_rate)) +
geom_histogram(binwidth = 10) #trim left a bit to normal
d$max_heart_rate_trim <- ifelse(d$max_heart_rate < quantile(d$max_heart_rate, 0.01),
quantile(d$max_heart_rate, 0.01),
d$max_heart_rate)
ggplot(d, aes(x = max_heart_rate_trim)) +
geom_histogram(binwidth = 10)
d <- d %>%
select(-max_heart_rate)
#$ angina               <dbl> 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,…
#(0: False, 1: True)
d$angina_fct <- as.factor(recode(d$angina, '0' = "N", '1' = "Y"))
d %>%
group_by(angina_fct) %>%
tally() %>%
mutate(p=n/sum(n)) #33% Yes
d <- d %>%
select(-angina)
#$ oldpeak              <dbl> 2.4, 1.6, 0.3, 0.2, 0.2, 0.4, 0.6, 1.2, 1.2, 4.0, 0.5, 0.0, 0.0, 2.6, 0.0, 1.6, 1.8, 3.1, 1.8, 1.4, 2.6, 0.2, 1.2, 0.1, 0.…
#  ST depression induced by exercise relative to rest, a measure of abnormality in electrocardiograms
#voy
get_percentiles(d$oldpeak) #from 0 to 6 with a .8 median
ggplot(d, aes(x = oldpeak)) +
geom_histogram() #mostly zeros, so will cut
table(
cut(d$oldpeak,
breaks = seq(0,6),
include.lowest = TRUE)
)
# unsure, so will create a binary
d$oldpeak_is <- as.factor(ifelse(d$oldpeak > 0, 1, 0))
d %>%
group_by(oldpeak_is) %>%
tally() %>%
mutate(p=n/sum(n)) #68% yes
#$ slope                <dbl> 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 3, 2, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1,…
d %>%
group_by(slope) %>%
tally() %>%
mutate(p=n/sum(n)) #mostly 1 and 2, 3 is small so likely will bin
d <- d %>%
mutate(slope_fact = as.factor(slope)) %>%
select(-slope)
#$ major_vessels        <dbl> 3, 0, 0, 1, 1, 0, 1, 1, 2, 3, 0, 0, 0, 2, 1, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0,…
d <- d %>%
mutate(major_vessels_fct = as.factor(major_vessels)) %>%
select(-major_vessels)
d %>%
group_by(major_vessels_fct) %>%
tally() %>%
mutate(p=n/sum(n)) #mostly 0 and 1, 2 and 3 are small and might combine
#$ thal                 <dbl> 3, 7, 7, 7, 3, 7, 6, 7, 7, 7, 7, 7, 3, 3, 3, 3, 7, 7, 3, 7, 7, 3, 3, 3, 3, 3, 3, 3, 7, 3, 7, 6, 3, 7, 7, 7, 7, 3, 3, 3, 7,…
#thalium stresss test measures blood flow to heart
#thal: 3 = normal; 6 = fixed defect; 7 = reversable defect
d %>%
group_by(thal) %>%
tally() %>%
mutate(p=n/sum(n)) #mostly 3 and 7, small n for 6
d <- d %>%
mutate(thal_fct = as.factor(thal)) %>%
select(-thal)
#$ heart_disease        <int> 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2,…
#absense 1, presence 2
# recode to 01 maybe
d %>%
group_by(heart_disease) %>%
tally() %>%
mutate(p=n/sum(n)) #balanced
d <- d %>%
mutate(heart_disease_fct = as.factor(heart_disease)) %>%
select(-heart_disease)
# confirm we only have num and fct variables
glimpse(d)
# --------------------------------------------------
# Manually see which vars have potential to predict
# loop over all fct vars and see potential of prediction
is_fct_column <- sapply(d, is.factor)
is_fct_column
d_fac <- d[,is_fct_column]
for (i in 1:(ncol(d_fac)-1)){
print(i)
x <- names(d_fac[i])
print(x)
t <- table(d_fac$heart_disease_fct, d_fac[,i])
print(t)
p <- round(prop.table(t, margin = 2),2)
print(p)
barplot(p, xlab = x)
}
# notes on potential predictors
# sex: high, 55% vs 23% for males
# chest pain: high 4 vs rest so combine
# sugar: no potential
# ekg: strong, combine
# angina: strong
# oldpeak flag: strong
# slope: strong, combine 2-3
# vessels: strong, combine 2-3
# thal: strong, combine 6-7 cause n low
#loop over all numeric vars to see pot of pred
is_num_column <- sapply(d, is.numeric)
is_num_column
d_num <- d[,is_num_column]
d_num <- cbind(d_num, d[,15]) #add var to predict
colnames(d_num)[6] <- "heart_disease_fct"
for (i in 1:(ncol(d_num)-1)){
print(i)
x <- names(d_num[i])
print(x)
boxplot(d_num[,i] ~ heart_disease_fct , d_num,
horizontal = TRUE, xlab = x)
}
# potential predictors num
# age: yes
# bp: no
# oldpeak: yes
# chol: maybe
# max hr: yes
# ---------------------------------------
# final prep to vars based on prediction
# chest pain: high 4 vs rest so combine
d <- d %>%
mutate(chest_pain_bin = as.factor(case_when(chest_pain_fct == "4" ~ "4",
TRUE ~ "1-3"))) %>%
select(-chest_pain_fct)
# ekg: strong, combine
d <- d %>%
mutate(electrocardiographic_bin = as.factor(case_when(electrocardiographic_fct == "0" ~ "0",
TRUE ~ "2"))) %>%
select(-electrocardiographic_fct)
# slope: strong, combine 2-3
d <- d %>%
mutate(slope_bin = as.factor(case_when(slope_fact == "1" ~ "1",
TRUE ~ "2-3"))) %>%
select(-slope_fact)
# vessels: strong, combine 2-3
d <- d %>%
mutate(major_vessels_bin = as.factor(case_when(major_vessels_fct == "0" ~ "0",
major_vessels_fct == "1" ~ "1",
TRUE ~ "2-3"))) %>%
select(-major_vessels_fct)
# thal: strong, combine 6-7 cause n low
d <- d %>%
mutate(thal_bin = as.factor(case_when(thal_fct == "3" ~ "3",
TRUE ~ "6-7"))) %>%
select(-thal_fct)
glimpse(d)
# CV caret
set.seed(97702)
train_control <- trainControl(method = "cv", number = 10)
mdl2_cv <- train(heart_disease_fct ~ .,
data = d, method = "glm",
trControl = train_control)
mdl2_cv
print(mdl2_cv)
